// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Models;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Models.Migrations
{
    [DbContext(typeof(EntityContext))]
    [Migration("20230629114312_AddNewPermission")]
    partial class AddNewPermission
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.19")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Models.Models.Cassette", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Quantity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0);

                    b.HasKey("Id");

                    b.ToTable("Cassettes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Taxi",
                            Quantity = 3
                        },
                        new
                        {
                            Id = 2,
                            Name = "Pulp Finction",
                            Quantity = 3
                        },
                        new
                        {
                            Id = 3,
                            Name = "Sleepless in Seattle",
                            Quantity = 3
                        },
                        new
                        {
                            Id = 4,
                            Name = "Ghost",
                            Quantity = 4
                        },
                        new
                        {
                            Id = 5,
                            Name = "Romancing the Stone",
                            Quantity = 3
                        },
                        new
                        {
                            Id = 6,
                            Name = "Grease",
                            Quantity = 3
                        },
                        new
                        {
                            Id = 7,
                            Name = "The Godfather",
                            Quantity = 3
                        },
                        new
                        {
                            Id = 8,
                            Name = "Scarface",
                            Quantity = 1
                        });
                });

            modelBuilder.Entity("Models.Models.Permission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Permissions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "canView"
                        },
                        new
                        {
                            Id = 2,
                            Name = "canRentMovies"
                        },
                        new
                        {
                            Id = 3,
                            Name = "canManageUser"
                        },
                        new
                        {
                            Id = 4,
                            Name = "canManageCassetts"
                        });
                });

            modelBuilder.Entity("Models.Models.RfToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("ExpireDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("boolean");

                    b.Property<string>("RefreshToken")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Tokens");
                });

            modelBuilder.Entity("Models.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Name = "User"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Guest"
                        });
                });

            modelBuilder.Entity("Models.Models.RolePermission", b =>
                {
                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.Property<int>("PermissionId")
                        .HasColumnType("integer");

                    b.HasKey("RoleId", "PermissionId");

                    b.HasIndex("PermissionId");

                    b.ToTable("RolePermissions");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            PermissionId = 1
                        },
                        new
                        {
                            RoleId = 1,
                            PermissionId = 2
                        },
                        new
                        {
                            RoleId = 2,
                            PermissionId = 1
                        },
                        new
                        {
                            RoleId = 2,
                            PermissionId = 2
                        },
                        new
                        {
                            RoleId = 2,
                            PermissionId = 3
                        },
                        new
                        {
                            RoleId = 2,
                            PermissionId = 4
                        },
                        new
                        {
                            RoleId = 3,
                            PermissionId = 1
                        });
                });

            modelBuilder.Entity("Models.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "admin@admin.com",
                            FirstName = "Admin",
                            LastName = "Admin",
                            Password = "Admin123"
                        },
                        new
                        {
                            Id = 2,
                            Email = "user@user.com",
                            FirstName = "User",
                            LastName = "User",
                            Password = "User123"
                        },
                        new
                        {
                            Id = 3,
                            Email = "guest@guest.com",
                            FirstName = "Guest",
                            LastName = "Guest",
                            Password = "Guest123"
                        });
                });

            modelBuilder.Entity("Models.Models.UserCassette", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CassetteId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("ReturnDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("TakeDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CassetteId");

                    b.HasIndex("UserId");

                    b.ToTable("UserCassettes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CassetteId = 8,
                            TakeDate = new DateTime(2023, 6, 29, 11, 43, 12, 217, DateTimeKind.Utc).AddTicks(6077),
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            CassetteId = 1,
                            TakeDate = new DateTime(2023, 6, 29, 11, 43, 12, 217, DateTimeKind.Utc).AddTicks(6080),
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            CassetteId = 3,
                            TakeDate = new DateTime(2023, 6, 29, 11, 43, 12, 217, DateTimeKind.Utc).AddTicks(6080),
                            UserId = 2
                        },
                        new
                        {
                            Id = 4,
                            CassetteId = 5,
                            TakeDate = new DateTime(2023, 6, 29, 11, 43, 12, 217, DateTimeKind.Utc).AddTicks(6081),
                            UserId = 2
                        });
                });

            modelBuilder.Entity("Models.Models.UserRole", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 2,
                            RoleId = 2
                        },
                        new
                        {
                            UserId = 3,
                            RoleId = 3
                        });
                });

            modelBuilder.Entity("Models.Models.RfToken", b =>
                {
                    b.HasOne("Models.Models.User", "User")
                        .WithMany("RfTokens")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Models.Models.RolePermission", b =>
                {
                    b.HasOne("Models.Models.Permission", "Permission")
                        .WithMany("RolePermissions")
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Models.Models.Role", "Role")
                        .WithMany("RolePermissions")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permission");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Models.Models.UserCassette", b =>
                {
                    b.HasOne("Models.Models.Cassette", "Cassette")
                        .WithMany("UserCassettes")
                        .HasForeignKey("CassetteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Models.Models.User", "User")
                        .WithMany("UserCassettes")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cassette");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Models.Models.UserRole", b =>
                {
                    b.HasOne("Models.Models.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Models.Models.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Models.Models.Cassette", b =>
                {
                    b.Navigation("UserCassettes");
                });

            modelBuilder.Entity("Models.Models.Permission", b =>
                {
                    b.Navigation("RolePermissions");
                });

            modelBuilder.Entity("Models.Models.Role", b =>
                {
                    b.Navigation("RolePermissions");

                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("Models.Models.User", b =>
                {
                    b.Navigation("RfTokens");

                    b.Navigation("UserCassettes");

                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
